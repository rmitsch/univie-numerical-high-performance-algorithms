#########################
# Calculate results with 
# different block sizes.
#########################

problem_sizes = 100:100:1200;
block_sizes = [5, 10, 20, 50, 100];
runtimes = zeros(size(problem_sizes)(2), size(block_sizes)(2));
#{
for i = 1:size(problem_sizes)(2)
    printf('n = %i\n', problem_sizes(i));

    # Generate random non-singular matrix of rank n.
    A = generate_random_nonsingular_matrix(problem_sizes(i));

    for j = 1:size(block_sizes)(2)
    	printf('  r = %i\n', block_sizes(j));
    	
    	t = 0;
    	for k = 1:1:3
	    	printf('    #%i\n', k);	
		    tic_id = tic;
		    [LU, P] = recursive_block_lu(A, problem_sizes(i), block_sizes(j));
		    L = tril(LU, -1);
		    U = triu(LU, 0);
		    L(1:1 + size(L, 1):end) = 1;
			t += toc(tic_id);
		end
	 	runtimes(i, j) = t / 3;
    end
end

runtimes
#}

#########################
# Plot results.
#########################

runtimes = [0.030478,0.025170,0.020839,0.022286,0.026303;0.086838,0.072926,0.071689,0.086124,0.101909;0.240311,0.202736,0.179404,0.212948,0.273105;0.466404,0.433992,0.513830,0.595063,0.686711;0.925372,0.857304,0.873744,1.062136,1.213320;1.900778,2.011991,1.789719,2.070595,2.549012;3.203229,3.039062,3.211023,3.572088,5.905996;7.169561,5.856712,5.840467,6.261198,7.136446;6.152257,6.189753,6.178143,6.799528,7.559651;9.452294,8.460882,8.783213,10.124214,10.931350;11.904800,12.540257,12.994353,14.117097,15.872557;18.119674,17.529917,18.101617,19.552804,21.874841];
runtimes = transpose(runtimes)
runtimes(1, :)

figure('Position',[0, 0, 800, 250])
grid on
hold on

plot(problem_sizes, "marker", "+",  "markersize", 8, "linewidth", 1, runtimes(1, :), '1; b = 5;-');
plot(problem_sizes, "marker", "o",  "markersize", 8, "linewidth", 1, runtimes(2, :), '2; b = 10;--');
plot(problem_sizes, "marker", "x",  "markersize", 8, "linewidth", 1, runtimes(3, :), '3; b = 20;:');
plot(problem_sizes, "marker", "s",  "markersize", 8, "linewidth", 1, runtimes(4, :), '4; b = 50;-');
plot(problem_sizes, "marker", "d",  "markersize", 8, "linewidth", 1, runtimes(5, :), '5; b = 100;.-');

legend ({
        "b = 5", "b = 10", "b = 20", "b = 50", "b = 100", 
}, "location", "eastoutside")
title ("Runtime w.r.t. block size", "fontsize", 16);

#{
n = 100:100:1200;
b = [5, 10, 20, 50, 100];
    0.030478    0.025170    0.020839    0.022286    0.026303
    0.086838    0.072926    0.071689    0.086124    0.101909
    0.240311    0.202736    0.179404    0.212948    0.273105
    0.466404    0.433992    0.513830    0.595063    0.686711
    0.925372    0.857304    0.873744    1.062136    1.213320
    1.900778    2.011991    1.789719    2.070595    2.549012
    3.203229    3.039062    3.211023    3.572088    5.905996
    7.169561    5.856712    5.840467    6.261198    7.136446
    6.152257    6.189753    6.178143    6.799528    7.559651
    9.452294    8.460882    8.783213   10.124214   10.931350
   11.904800   12.540257   12.994353   14.117097   15.872557
   18.119674   17.529917   18.101617   19.552804   21.874841
n = 300:100:1200;
b = [50, 100, 200, 300];
    0.16182    0.22582    0.46781    0.46656
    0.36590    0.44669    0.63251    0.87246
    0.75043    0.96745    1.27238    1.95562
    1.45325    1.70647    2.32038    3.25311
    2.64147    3.37860    3.93989    5.62994
    4.25227    5.10215    6.47558    7.62913
    6.72741    7.72681    9.61246   11.60993
   10.00992   11.58390   13.74169   16.31798
   14.62608   16.52110   19.95011   23.11440
   19.99764   22.21452   26.35537   30.46979
n  = 600:100:1200;
block_sizes = [300, 400, 500];
    2.9846    3.7099    4.4107
    5.1929    6.2066    7.3631
    7.6609    9.3449   10.8681
   11.7036   16.9820   17.0145
   18.9342   21.1605   24.0686
   24.8585   29.2167   33.1404
   33.3733   37.0653   42.3876

#}
